// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: tokens.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createToken = `-- name: CreateToken :exec
INSERT INTO tokens (hash, user_uuid, expiry, scope)
VALUES ($1, $2, $3, $4)
`

type CreateTokenParams struct {
	Hash     []byte             `json:"hash"`
	UserUuid uuid.UUID          `json:"user_uuid"`
	Expiry   pgtype.Timestamptz `json:"expiry"`
	Scope    string             `json:"scope"`
}

func (q *Queries) CreateToken(ctx context.Context, arg CreateTokenParams) error {
	_, err := q.db.Exec(ctx, createToken,
		arg.Hash,
		arg.UserUuid,
		arg.Expiry,
		arg.Scope,
	)
	return err
}

const deleteTokensForUser = `-- name: DeleteTokensForUser :exec
DELETE FROM tokens
WHERE scope=$1 AND user_uuid=$2
`

type DeleteTokensForUserParams struct {
	Scope    string    `json:"scope"`
	UserUuid uuid.UUID `json:"user_uuid"`
}

func (q *Queries) DeleteTokensForUser(ctx context.Context, arg DeleteTokensForUserParams) error {
	_, err := q.db.Exec(ctx, deleteTokensForUser, arg.Scope, arg.UserUuid)
	return err
}
