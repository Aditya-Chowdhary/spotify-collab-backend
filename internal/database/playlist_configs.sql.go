// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: playlist_configs.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createDefaultConfiguration = `-- name: CreateDefaultConfiguration :one
INSERT INTO playlist_configs (playlist_uuid)
VALUES ($1)
RETURNING playlist_uuid, explicit, require_approval, max_song
`

func (q *Queries) CreateDefaultConfiguration(ctx context.Context, playlistUuid uuid.UUID) (PlaylistConfig, error) {
	row := q.db.QueryRow(ctx, createDefaultConfiguration, playlistUuid)
	var i PlaylistConfig
	err := row.Scan(
		&i.PlaylistUuid,
		&i.Explicit,
		&i.RequireApproval,
		&i.MaxSong,
	)
	return i, err
}

const getConfiguration = `-- name: GetConfiguration :one
SELECT playlist_uuid, explicit, require_approval, max_song 
FROM playlist_configs
WHERE playlist_uuid = $1
`

func (q *Queries) GetConfiguration(ctx context.Context, playlistUuid uuid.UUID) (PlaylistConfig, error) {
	row := q.db.QueryRow(ctx, getConfiguration, playlistUuid)
	var i PlaylistConfig
	err := row.Scan(
		&i.PlaylistUuid,
		&i.Explicit,
		&i.RequireApproval,
		&i.MaxSong,
	)
	return i, err
}

const updateConfiguration = `-- name: UpdateConfiguration :one
UPDATE playlist_configs
SET explicit = $1, require_approval = $2, max_song = $3
WHERE playlist_uuid = $4
RETURNING playlist_uuid, explicit, require_approval, max_song
`

type UpdateConfigurationParams struct {
	Explicit        bool      `json:"explicit"`
	RequireApproval bool      `json:"require_approval"`
	MaxSong         int32     `json:"max_song"`
	PlaylistUuid    uuid.UUID `json:"playlist_uuid"`
}

func (q *Queries) UpdateConfiguration(ctx context.Context, arg UpdateConfigurationParams) (PlaylistConfig, error) {
	row := q.db.QueryRow(ctx, updateConfiguration,
		arg.Explicit,
		arg.RequireApproval,
		arg.MaxSong,
		arg.PlaylistUuid,
	)
	var i PlaylistConfig
	err := row.Scan(
		&i.PlaylistUuid,
		&i.Explicit,
		&i.RequireApproval,
		&i.MaxSong,
	)
	return i, err
}
